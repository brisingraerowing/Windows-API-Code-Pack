<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="FilePathNotExist" xml:space="preserve">
    <value>The given path does not exist ({0})</value>
  </data>
  <data name="FolderTypeControlPanelCategory" xml:space="preserve">
    <value>ControlPanel Category</value>
  </data>
  <data name="FolderTypeControlPanelClassic" xml:space="preserve">
    <value>ControlPanel Classic</value>
  </data>
  <data name="FolderTypeCommunications" xml:space="preserve">
    <value>Communications</value>
  </data>
  <data name="FolderTypeCompressedFolder" xml:space="preserve">
    <value>Compressed Folder</value>
  </data>
  <data name="FolderTypeContacts" xml:space="preserve">
    <value>Contacts</value>
  </data>
  <data name="FolderTypeDocuments" xml:space="preserve">
    <value>Documents</value>
  </data>
  <data name="FolderTypeGames" xml:space="preserve">
    <value>Games</value>
  </data>
  <data name="FolderTypeGenericLibrary" xml:space="preserve">
    <value>Generic Library</value>
  </data>
  <data name="FolderTypeInvalid" xml:space="preserve">
    <value>Invalid</value>
  </data>
  <data name="FolderTypeLibrary" xml:space="preserve">
    <value>Library</value>
  </data>
  <data name="FolderTypeMusic" xml:space="preserve">
    <value>Music</value>
  </data>
  <data name="FolderTypeMusicIcons" xml:space="preserve">
    <value>Music Icons</value>
  </data>
  <data name="FolderTypeNetworkExplorer" xml:space="preserve">
    <value>Network Explorer</value>
  </data>
  <data name="FolderTypeNotSpecified" xml:space="preserve">
    <value>Not Specified</value>
  </data>
  <data name="FolderTypeOpenSearch" xml:space="preserve">
    <value>Open Search</value>
  </data>
  <data name="FolderTypeOtherUsers" xml:space="preserve">
    <value>Other Users</value>
  </data>
  <data name="FolderTypePictures" xml:space="preserve">
    <value>Pictures</value>
  </data>
  <data name="FolderTypePrinters" xml:space="preserve">
    <value>Printers</value>
  </data>
  <data name="FolderTypeRecordedTV" xml:space="preserve">
    <value>RecordedTV</value>
  </data>
  <data name="FolderTypeRecycleBin" xml:space="preserve">
    <value>RecycleBin</value>
  </data>
  <data name="FolderTypeSavedGames" xml:space="preserve">
    <value>Saved Games</value>
  </data>
  <data name="FolderTypeSearchConnector" xml:space="preserve">
    <value>Search Connector</value>
  </data>
  <data name="FolderTypeSearches" xml:space="preserve">
    <value>Searches</value>
  </data>
  <data name="FolderTypeGenericSearchResults" xml:space="preserve">
    <value>Generic SearchResults</value>
  </data>
  <data name="FolderTypeSoftwareExplorer" xml:space="preserve">
    <value>Software Explorer</value>
  </data>
  <data name="FolderTypeUserFiles" xml:space="preserve">
    <value>User Files</value>
  </data>
  <data name="FolderTypeUserLibraries" xml:space="preserve">
    <value>Users Libraries</value>
  </data>
  <data name="FolderTypeVideos" xml:space="preserve">
    <value>Videos</value>
  </data>
  <data name="KnownFolderInvalidGuid" xml:space="preserve">
    <value>Given Known Folder ID is invalid.</value>
  </data>
  <data name="KnownFolderParsingName" xml:space="preserve">
    <value>Parsing name is invalid.</value>
  </data>
  <data name="PropertyCollectionCanonicalInvalidIndex" xml:space="preserve">
    <value>This CanonicalName is not a valid index.</value>
  </data>
  <data name="PropertyCollectionInvalidIndex" xml:space="preserve">
    <value>This PropertyKey is not a valid index.</value>
  </data>
  <data name="PropertyCollectionNullCanonicalName" xml:space="preserve">
    <value>Argument CanonicalName cannot be null or empty.</value>
  </data>
  <data name="ShellExceptionDefaultText" xml:space="preserve">
    <value>Shell Exception has occurred, look at inner exception for information.</value>
  </data>
  <data name="ShellHelperGetParsingNameFailed" xml:space="preserve">
    <value>GetParsingName has failed.</value>
  </data>
  <data name="ShellInvalidCanonicalName" xml:space="preserve">
    <value>The given CanonicalName is not valid.</value>
  </data>
  <data name="ShellLibraryDefaultSaveFolderNotFound" xml:space="preserve">
    <value>DefaultSaveFolder path not found.</value>
  </data>
  <data name="ShellLibraryEmptyName" xml:space="preserve">
    <value>LibraryName cannot be empty.</value>
  </data>
  <data name="ShellLibraryFolderNotFound" xml:space="preserve">
    <value>Folder path not found.</value>
  </data>
  <data name="ShellLibraryInvalidFolderType" xml:space="preserve">
    <value>Invalid FolderType Guid.</value>
  </data>
  <data name="ShellLibraryInvalidLibrary" xml:space="preserve">
    <value>The given known folder is not a valid library.</value>
  </data>
  <data name="ShellObjectCannotGetDisplayName" xml:space="preserve">
    <value>Can't get the display name.</value>
  </data>
  <data name="ShellObjectCreationFailed" xml:space="preserve">
    <value>Shell item could not be created.</value>
  </data>
  <data name="ShellObjectFactoryPlatformNotSupported" xml:space="preserve">
    <value>Shell Object creation requires Windows Vista or higher operating system.</value>
  </data>
  <data name="ShellObjectFactoryUnableToCreateItem" xml:space="preserve">
    <value>Unable to Create Shell Item.</value>
  </data>
  <data name="ShellPropertyFactoryConstructorNotFound" xml:space="preserve">
    <value>No constructor found matching requested argument types.</value>
  </data>
  <data name="ShellPropertyWindows7" xml:space="preserve">
    <value>This Property is available on Windows 7 only.</value>
  </data>
  <data name="ShellPropertyWrongType" xml:space="preserve">
    <value>This property only accepts a value of type "{0}".</value>
  </data>
  <data name="ShellThumbnailCurrentSizeRange" xml:space="preserve">
    <value>CurrentSize (width or height) cannot be greater than the maximum size: {0}.</value>
  </data>
  <data name="ShellThumbnailDoesNotHaveThumbnail" xml:space="preserve">
    <value>The current ShellObject does not have a thumbnail. Try using ShellThumbnailFormatOption.Default to get the icon for this item.</value>
  </data>
  <data name="ShellThumbnailNoHandler" xml:space="preserve">
    <value>The current ShellObject does not have a valid thumbnail handler or there was a problem in extracting the thumbnail for this specific shell object.</value>
  </data>
  <data name="ShellThumbnailSizeCannotBe0" xml:space="preserve">
    <value>CurrentSize (width or height) cannot be 0.</value>
  </data>
  <data name="FolderIdsUnknownGuid" xml:space="preserve">
    <value>Guid does not identify a known folder.</value>
  </data>
  <data name="ShellPropertyCannotSetProperty" xml:space="preserve">
    <value>The value on this property cannot be set. To set the property value, use the ShellObject that is associated with this property.</value>
  </data>
  <data name="ShellPropertySetValue" xml:space="preserve">
    <value>Unable to set property.</value>
  </data>
  <data name="ShellPropertyUnableToGetWritableProperty" xml:space="preserve">
    <value>Unable to get writable property store for this property.</value>
  </data>
  <data name="ShellPropertyValueTruncated" xml:space="preserve">
    <value>A value had to be truncated in a string or rounded if a numeric value. Set AllowTruncatedValue to true to prevent this exception.</value>
  </data>
  <data name="SearchConditionFactoryInvalidProperty" xml:space="preserve">
    <value>Given property key is invalid.</value>
  </data>
  <data name="ShellSearchFolderUnableToSetSortColumns" xml:space="preserve">
    <value>Unable to set list of sort columns.</value>
  </data>
  <data name="ShellSearchFolderUnableToSetVisibleColumns" xml:space="preserve">
    <value>Unable to set visible columns.</value>
  </data>
</root>